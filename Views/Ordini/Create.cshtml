﻿@model Pizzeria.Models.OrdArt

@{
    ViewBag.Title = "Create";
}

<h2 class="my-4">Ordina ora!</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @if (User.IsInRole("Amministratore"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Ordini.User_ID, "User_ID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("User_ID", null, htmlAttributes: new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.Ordini.User_ID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group visually-hidden">
                @Html.LabelFor(model => model.Ordini.CostoCons, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Ordini.CostoCons, new { htmlAttributes = new { @class = "form-control", @Value = 4, required = "required" } })
                    @Html.ValidationMessageFor(model => model.Ordini.CostoCons, "", new { @class = "text-danger" })
                </div>
            </div>

        }
        else if (User.IsInRole("Cliente"))
        {
            <div class="form-group visually-hidden">
                @Html.LabelFor(model => model.Ordini.CostoCons, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Ordini.CostoCons, new { htmlAttributes = new { @class = "form-control", @Value = 4, required = "required" } })
                    @Html.ValidationMessageFor(model => model.Ordini.CostoCons, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group visually-hidden">
                @Html.LabelFor(model => model.Ordini.User_ID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Ordini.User_ID, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.User_ID, required = "required" } })

                    @Html.ValidationMessageFor(model => model.Ordini.User_ID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group my-3">
                    @Html.LabelFor(model => model.Articolo_ID, "Pizza", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Articolo_ID", null, htmlAttributes: new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.Articolo_ID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group my-3">
                    @Html.LabelFor(model => model.Quantita, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Quantita, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Quantita, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group my-3">
                    @Html.LabelFor(model => model.Ordini.Indirizzo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Ordini.Indirizzo, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Ordini.Indirizzo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group my-3">
                    @Html.LabelFor(model => model.Ordini.Note, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Ordini.Note, new { htmlAttributes = new { @class = "form-control", placeholder = "Aggiunte ingredienti, allergie..." } })
                        @Html.ValidationMessageFor(model => model.Ordini.Note, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Ordina" class="btn btn-primary mb-5 mt-2" />
                    </div>
                </div>
            </div>
        }
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}